
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package no.progconsult.flow.elhub.pollingservice.webservice;

import no.elhub.emif.wsdl.polling.meteringvalues.v1.AcknowledgePollRequest;
import no.elhub.emif.wsdl.polling.meteringvalues.v1.ElhubSOAPFault;
import no.elhub.emif.wsdl.polling.meteringvalues.v1.MeteringValuesPolling;
import no.elhub.emif.wsdl.polling.meteringvalues.v1.PollForDataRequest;
import no.elhub.emif.wsdl.polling.meteringvalues.v1.PollForDataResponse;
import org.apache.cxf.annotations.EndpointProperties;
import org.apache.cxf.annotations.EndpointProperty;

import javax.jws.WebService;
import java.util.logging.Logger;

/**
 * This class was generated by Apache CXF 3.1.3
 * 2015-11-04T23:28:09.670+01:00
 * Generated source version: 3.1.3
 * 
 */

@WebService(
                      serviceName = "MeteringValuesPollingService",
                      portName = "MeteringValuesPolling",
                      targetNamespace = "urn:no:elhub:emif:wsdl:polling:meteringvalues:v1",
                      wsdlLocation = "classpath:v1/wsdl/PollMeteringValues - WS-Security.wsdl",
                      endpointInterface = "no.elhub.emif.wsdl.polling.meteringvalues.v1.MeteringValuesPolling")
@EndpointProperties({
        @EndpointProperty(key = "ws-security.signature.properties", value = "mockendpoint_wss.properties"),
        @EndpointProperty(key = "ws-security.callback-handler", value = "no.progconsult.flow.elhub.pollingservice.webservice"
                + ".MockEndpointKeystoreCallbackHandler")
})

public class MeteringValuesPollingImpl implements MeteringValuesPolling {

    private static final Logger LOG = Logger.getLogger(MeteringValuesPollingImpl.class.getName());

    private PollForDataResponse pollResponse;

    /* (non-Javadoc)
     * @see no.elhub.emif.wsdl.polling.meteringvalues.v1.MeteringValuesPolling#pollForData(no.elhub.emif.wsdl.polling.meteringvalues.v1.PollForDataRequest  pollForDataRequest )*
     */
    public no.elhub.emif.wsdl.polling.meteringvalues.v1.PollForDataResponse pollForData(PollForDataRequest pollForDataRequest) throws

            ElhubSOAPFault {
        LOG.info("Executing operation pollForData");
        System.out.println(pollForDataRequest);
        return pollResponse;
    }

    /* (non-Javadoc)
     * @see no.elhub.emif.wsdl.polling.meteringvalues.v1.MeteringValuesPolling#acknowledgePoll(no.elhub.emif.wsdl.polling.meteringvalues.v1.AcknowledgePollRequest  acknowledgePollRequest )*
     */
    public void acknowledgePoll(AcknowledgePollRequest acknowledgePollRequest) throws ElhubSOAPFault {
        LOG.info("Executing operation acknowledgePoll");
        System.out.println(acknowledgePollRequest);
        try {
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new ElhubSOAPFault("ElhubSOAPFault...");
    }

    /**
     * Inject reponse from Elhub Webservice Mock.
     *
     * @param pollResponse
     */
    public void setPollResponse(PollForDataResponse pollResponse) {
        this.pollResponse = pollResponse;
    }

}
